// Хронить информацию лучше всего в виде объекта имя тэга: его описание 
// obj['имя тэга'] т.к. проще всего обращаться к объекту по его ключам.
// Вбиваем в инпут имя тега, можно прикрутить функцию которая приводит 
// к нормальному виду вводимый текст (делаем все буквы прописными или 
// наоборот), обращаемся к объекту и выводим в какой либо див описание.

const input = document.querySelector('#input');
const tagName = document.querySelector('#tagName');
const discription = document.querySelector('#discription');

const repoTag = {link: 'Тег <link> определяет ссылку на внешний ресурс. Наиболее часто этот тег используется для подключения файла стилей CSS к документу HTML.',
body: 'Основное тело HTML документа, где размещается весь контент. Этот элемент обязателен к использованию и используется на странице один раз. Он должен начинаться сразу же после закрывающего тега <head> и заканчиваться непосредственно перед закрывающем тегом <html>.',
html: 'Корневой элемент, определяющий, что это HTML-документ. Открывающий тег идет сразу же после декларации <!DOCTYPE>, а закрывающий тег – самый последний тег в документе. Внутри элемента <html> обязательно должны определяться тег <head> и тег <body>.',
p: 'Тег p определяет текстовый абзац или параграф.'};

discription.innerHTML = 'Введите имя искомого тега в поле инпута (доступны теги - link, body, html, p)'

input.addEventListener('keydown', function (event) {
    if (event.code == 'Enter') {
        discription.innerHTML = repoTag[input.value] ?? 'Такого тега нет в базе';
    }
})
